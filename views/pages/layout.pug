extends ../base/layout
include mixins.pug

block append styles
    - icons = ['delete','edit','add_circle','file_upload', 'check'].sort()
    link(
        href=`https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20,100,1,200&icon_names=${icons.join(',')}&display=swap` 
        rel="stylesheet")
    style.
        .material-icon-button {
        display: inline-flex; /* Align icon and text if present */
        align-items: center;
        justify-content: center;
        background-color: #f0f0f0; /* Example background color */
        color: #333; /* Example icon color */
        border: none;
        border-radius: 50%; /* For a circular button */
        width: 48px; /* Example size */
        height: 48px; /* Example size */
        cursor: pointer;
        outline: none;
        transition: background-color 0.3s ease; /* Smooth hover effect */
        }

        .material-icon-button:hover {
        background-color: #e0e0e0; /* Hover background color */
        }

        .material-icon-button:active {
        background-color: #d0d0d0; /* Active background color */
        }

        .material-icon-button .material-icons {
        font-size: 24px; /* Icon size */
        }


block content
    div(class="flex" style="justify-content: space-between; align-items: center;")
        +breadcrumbs(page.slug)
        if admin
        div(role="group" class="flex3" aria-label="Admin Actions")
            i(role="button" hx-get=`/tad/create` hx-target="#dialog-container" hx-swap="innerHTML" class="material-symbols-outlined")="add_circle"
            i(role="button" hx-get=`${(page.name == "$." ? "/tad" : "/tad" + page.slug) + "?editmode=" + !edit }` hx-target=".container" hx-swap="innerHTML" class="material-symbols-outlined")=`${!edit ? "edit" : "check"}`
            i(role="button" hx-delete=`/tad/${page.id}` hx-confirm="Are you sure you want to delete" class="material-symbols-outlined")="delete"
            label.btn(for="fileinput" role="button") Upload JS
            input#fileinput(type="file" role="button" name="file" style="display:none;" class="clickable" accept=".js,.ts")
            form(id="upload" method="POST" action="/tad/upload"  hx-post="/tad/upload" hx-target="#dialog-container" hx-swap="innerHTML" style="display:inline")
            input(type="hidden" name="parent_id" value=page.id)
            input(type="hidden" name="filecontent" value="")
    
    div(class="page-details" hx-trigger="load" hx-get=`/tad/view/${page.id}` hx-target=".page-details" hx-swap="outerHTML")
        Loading page details...

    block typeDetails 
        case page.page_type
            when 'class'
                div(class="type-details" hx-trigger="load" hx-get=`/classes/view/${page.id}` hx-target=".type-details" hx-swap="innerHTML")="Loading module details..."
            when 'property'
                div(class="type-details" hx-trigger="load" hx-get=`/properties/view/${page.id}` hx-target=".type-details" hx-swap="innerHTML")="Loading property details..."
            when 'method'
                div(class="type-details" hx-trigger="load" hx-get=`/methods/view/${page.id}` hx-target=".type-details" hx-swap="innerHTML")="Loading method details..."

    h2 Examples
    if page.CodeExample
        div.border.rounded.p-4.mb-4
            h3= page.CodeExample.name
            pre.bg-gray-100.p-2.rounded
            code= page.CodeExample.public
    else
        p No examples available.


    div#dialog-container
    script.
        let uploadForm = document.querySelector('#fileinput');
        uploadForm.addEventListener('change', (event) => {
        console.log('file selected, submitting form');
        const file = event.target.files[0];
        if(file){
            const reader = new FileReader();
            reader.onload = function(e) {
            const content = e.target.result;
            document.querySelector('input[name="filecontent"]').value = content;
            document.querySelector('#upload').requestSubmit();
            };
        
            reader.readAsText(file);
        }
        });

        function augment_textarea(event) { 
            const target = event.target || event.srcElement;
            const form = target.closest && target.closest('form') || document.querySelector("#notes_form");
            if (event.key === 'Enter' && !event.shiftKey) {
                console.log("Submitting form via augment_textarea");
                event.preventDefault();
                form.requestSubmit();  
                //we give a touch of time for the form to have pulled data.
            }
        }
